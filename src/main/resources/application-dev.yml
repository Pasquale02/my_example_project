# postgres non usato
spring:
  application:
    name: ov-ws-json-placeholder
  datasource: 
    platform: 'postgres'
    url: 'jdbc:postgresql://localhost:5432/dvdrental'
    username: postgres
    password: postgres
  jpa:
    show-sql: true
    ddl-auto: create
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation:true
            
########################

swagger:
  enable: true
  apiInfo:
    title: ${spring.application.name}
    description: 'Api for manage json placeholder'

springdoc:
  version: 1.0.0

api-docs:
  hosts:
    - url: 'http://localhost:8080/users'
      description: "Get from jsonplaceholder"
    - url: 'http://localhost:8080/post'
      description: "Post to jsonplaceholder"

# management port
management:
  endpoints:
    health:
      enabled: true
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
    web:
      exposure:
        include: '*'

management.metrics.export.prometheus.enabled: true
management.endpoints.web.exposure.include: health,info,metrics,prometheus

opentracing:
  jaeger:
    enabled: ${JAEGER_ENABLED:true}
    service-name: ${JAEGER_SERVICE_NAME:ms-my-project}
    log-spans: ${JAEGER_REPORTER_LOG_SPANS:false}
    probabilistic-sampler:
      sampling-rate: ${JAEGER_SAMPLING_RATE:1.0}
    udp-sender:
      host: ${JAEGER_AGENT_HOST:localhost}
      port: ${JAEGER_AGENT_PORT:6831}

logging:
  level:
    root: ${LOG_ROOT_LEVEL:info}